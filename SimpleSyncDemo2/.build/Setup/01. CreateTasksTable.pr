{
  "Action": {
    "FunctionName": "CreateTable",
    "Parameters": [
      {
        "Type": "string",
        "Name": "sql",
        "Value": "CREATE TABLE tasks (id BIGINT PRIMARY KEY, text TEXT, due_date DATETIME);"
      }
    ],
    "ReturnValue": null
  },
  "Text": "create table tasks, columns: text, due_date(datetime)",
  "Reload": false,
  "LlmRequest": {
    "temperature": 0.0,
    "top_p": 0.0,
    "frequencyPenalty": 0.0,
    "presencePenalty": 0.0,
    "maxLength": 4000,
    "llmResponseType": "json",
    "scheme": "{\"FunctionName\": string,\n\"Parameters\": [{\"Type\": string,\n\"Name\": string,\n\"Value\": object}],\n\"ReturnValue\"?: [{\"Type\": string,\n\"VariableName\": string}] = null}",
    "type": "PLang.Modules.DbModule.Builder",
    "promptMessage": [
      {
        "role": "system",
        "content": [
          {
            "type": "text",
            "text": "Map user command to this c# function: \r\n\r\n## csharp function ##\r\nvoid CreateTable(String sql)  \r\n## csharp function ##\r\n\r\nIf table name is a variable, keep the variable in the sql statement\r\nvariable is defined with starting and ending %, e.g. %filePath%.\r\nYou MUST generate a valid sql statement for sqlite.\r\nYou MUST add id to create statement.\r\nIf id is not defined then add id to the create statement. \r\nThe id MUST NOT be auto incremental, but is primary key.\r\nThe id should be datatype long/bigint/.. which fits sqlite.\r\n"
          },
          {
            "type": "text",
            "text": "You MUST respond in JSON, scheme:\r\n {\"FunctionName\": string,\n\"Parameters\": [{\"Type\": string,\n\"Name\": string,\n\"Value\": object}],\n\"ReturnValue\"?: [{\"Type\": string,\n\"VariableName\": string}] = null}"
          }
        ]
      },
      {
        "role": "assistant",
        "content": [
          {
            "type": "text",
            "text": "## functions available starts ##\r\nCreateDataSource(String? name = \"data\", String? localPath, String? databaseType = \"sqlite\", Boolean? setAsDefaultForApp = False, Boolean? keepHistoryEventSourcing = False)  : void  // localPath is location of the database on the drive for sqlite. localPath can be string with variables, default is null. \nSetDataSourceName(String name, String? localPath)  : IError \nBeginTransaction()  : void \nEndTransaction()  : void \nRollback()  : void \nLoadExtension(String fileName, String? procName)  : Error \nGetDatabaseStructure()  : ValueTuple`2  // Returns tables and views in database with the columns description. \nExecute(String sql, String? dataSourceName)  : ValueTuple`2 \nCreateTable(String sql, String? dataSourceName)  : ValueTuple`2 \nSelectOneRow(String sql, List`1<Object>? SqlParameters, String? dataSourceName)  : ValueTuple`2 \nSelect(String sql, List`1<Object>? SqlParameters, String? dataSourceName)  : ValueTuple`2 \nUpdate(String sql, List`1<Object>? SqlParameters, String? dataSourceName)  : ValueTuple`2 \nDelete(String sql, List`1<Object>? SqlParameters, String? dataSourceName)  : ValueTuple`2 \nInsert(String sql, List`1<Object>? SqlParameters, String? dataSourceName)  : ValueTuple`2  // Basic insert statement. Will return affected row count. \nInsertAndSelectIdOfInsertedRow(String sql, List`1<Object>? SqlParameters, String? dataSourceName)  : ValueTuple`2  // Insert statement that will return the id of the inserted row. Use only if user requests the id. \nInsertBulk(String tableName, List`1<Object> items, String? dataSourceName)  : ValueTuple`2  // Insert a list(bulk) into database, return number of rows inserted. \nGetAdditionalSystemErrorInfo()  : String \nGetAdditionalAssistantErrorInfo()  : ValueTuple`2\r\n## functions available ends ##"
          }
        ]
      },
      {
        "role": "user",
        "content": [
          {
            "type": "text",
            "text": "create table tasks, columns: text, due_date(datetime)"
          }
        ]
      }
    ],
    "model": "gpt-4o",
    "caching": true,
    "RawResponse": "```json\n{\n  \"FunctionName\": \"CreateTable\",\n  \"Parameters\": [\n    {\n      \"Type\": \"string\",\n      \"Name\": \"sql\",\n      \"Value\": \"CREATE TABLE tasks (id BIGINT PRIMARY KEY, text TEXT, due_date DATETIME);\"\n    }\n  ]\n}\n```"
  },
  "RunOnBuild": false
}
{
  "Action": {
    "FunctionName": "Select",
    "Parameters": [
      {
        "Type": "System.String",
        "Name": "sql",
        "Value": "SELECT * FROM tasks"
      }
    ],
    "ReturnValue": [
      {
        "Type": "System.Collections.Generic.List<System.Object>",
        "VariableName": "%tasks%"
      }
    ]
  },
  "Text": "select * from tasks, write out %tasks%",
  "Reload": false,
  "LlmRequest": {
    "temperature": 0.0,
    "top_p": 0.0,
    "frequencyPenalty": 0.0,
    "presencePenalty": 0.0,
    "maxLength": 4000,
    "llmResponseType": "json",
    "scheme": "{\"FunctionName\": string,\n\"Parameters\": [{\"Type\": string,\n\"Name\": string,\n\"Value\": object}],\n\"ReturnValue\"?: [{\"Type\": string,\n\"VariableName\": string}] = null}",
    "type": "PLang.Modules.DbModule.Builder",
    "promptMessage": [
      {
        "role": "system",
        "content": [
          {
            "type": "text",
            "text": "Map user command to either of these c# functions: \r\n\r\n## csharp function ##\r\nList<object> Select(String sql, List<object>()? SqlParameters = null) // always writes to one object\r\n## csharp function ##\r\n\r\n## Rules ##\r\nSelect function return multiple rows so user MUST define 'write to %variable%' and returns 1 value, a List<object>\r\nVariable is defined with starting and ending %, e.g. %filePath%.\r\n\\% is escape from start of variable, would be used in LIKE statements, then VariableNameOrValue should keep the escaped character, e.g. the user input \\%%title%\\%, should map to VariableNameOrValue=\\%%title%\\%\r\nSqlParameters is List of ParameterInfo(string ParameterName, string VariableNameOrValue, string TypeFullName). SqlParameters @id MUST be type System.Int64\r\nTypeFullName is Full name of the type in c#, System.String, System.Double, etc.\r\nReturnValue rules: \r\n- If user defines variable to write into, e.g. 'write to %result%' or 'into %result%' then ReturnValue=%result%, \r\n- Select function always writes to one variable\r\n- integer/int should always be System.Int64. \r\n\r\nIf table name is a variable, keep the variable in the sql statement\r\nYou MUST generate a valid sql statement for sqlite.\r\nYou MUST provide SqlParameters if SQL has @parameter.\r\n## Rules ##\r\n"
          },
          {
            "type": "text",
            "text": "You MUST respond in JSON, scheme:\r\n {\"FunctionName\": string,\n\"Parameters\": [{\"Type\": string,\n\"Name\": string,\n\"Value\": object}],\n\"ReturnValue\"?: [{\"Type\": string,\n\"VariableName\": string}] = null}"
          }
        ]
      },
      {
        "role": "assistant",
        "content": [
          {
            "type": "text",
            "text": "# examples #\r\n- select everything from tableX, write to %table% => sql: SELECT * FROM tableX, ReturnValue: %table%\r\n- select from tableB where id=%id%, into %table% => sql: SELECT * FROM tableB WHERE id=@id, ReturnValue: %table%\r\n- select * from %table% WHERE %name%, write to %result% => sql: SELECT * FROM %table% WHERE name=@name, ReturnValue: %result%\r\n- select id, name from users, write to %user% => then ReturnValue is %user% object\r\n- select id, name from users => then ReturnValue is %id%, %name% objects\r\n# examples #\r\n# ParameterInfo scheme #\r\n{\"ParameterName\" : string, \"VariableNameOrValue\" : object, \"TypeFullName\" : string, }\r\n# ParameterInfo scheme #\r\n"
          },
          {
            "type": "text",
            "text": "### tasks columns ###\n[{\"name\":\"id\",\"type\":\"BIGINT\",\"isnotnull\":0,\"isprimarykey\":1},{\"name\":\"text\",\"type\":\"TEXT\",\"isnotnull\":0,\"isprimarykey\":0},{\"name\":\"due_date\",\"type\":\"DATETIME\",\"isnotnull\":0,\"isprimarykey\":0}]\n### tasks columns ###"
          }
        ]
      },
      {
        "role": "user",
        "content": [
          {
            "type": "text",
            "text": "select * from tasks, write out %tasks%"
          }
        ]
      }
    ],
    "model": "gpt-4o",
    "caching": true,
    "RawResponse": "```json\n{\n  \"FunctionName\": \"Select\",\n  \"Parameters\": [\n    {\n      \"Type\": \"System.String\",\n      \"Name\": \"sql\",\n      \"Value\": \"SELECT * FROM tasks\"\n    }\n  ],\n  \"ReturnValue\": [\n    {\n      \"Type\": \"System.Collections.Generic.List<System.Object>\",\n      \"VariableName\": \"%tasks%\"\n    }\n  ]\n}\n```"
  },
  "RunOnBuild": false
}
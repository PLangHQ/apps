Start
- ask user, 'What do you have in your fridge?', write to %fridgeContents%
- if %fridgeContents% is not empty then
    - call !StoreFridgeContents %fridgeContents%
    - call !SuggestRecipe %fridgeContents%
- else
    - call !GetFridgeContents
    - call !SuggestRecipe %fridgeContents%

StoreFridgeContents
- insert into Fridge items %fridgeContents%, write to %id%
- write out 'Fridge contents stored.'

GetFridgeContents
- select items from Fridge, write to %fridgeContents%
- if %fridgeContents% is empty then
    - write out 'Your fridge is empty, please add items.'
- else
    - write out 'Fridge contents: %fridgeContents%'

SuggestRecipe
- [llm] system: suggest a recipe based on the fridge contents
    user: %fridgeContents%
    scheme: {recipeName:string, ingredients:[string], steps:[string]}
    write to %recipe%
- call !StoreRecipe %recipe%
- write out 'Recipe suggestion: %recipe.recipeName%'

StoreRecipe
- insert into Recipes name %recipe.recipeName%, ingredients %recipe.ingredients%, steps %recipe.steps%, write to %recipeId%
- write out 'Recipe stored.'

SelectPreviousRecipes
- select name from Recipes, write to %recipes%
- ask user, 'Select a recipe:', options %recipes%, write to %selectedRecipe%
- select * from Recipes where name=%selectedRecipe%, write to %recipeDetails%
- write out 'Recipe: %recipeDetails.name%\nIngredients: %recipeDetails.ingredients%\nSteps: %recipeDetails.steps%'
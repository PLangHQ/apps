Start
- select * from stories order by last_used desc,  write to %stories%
- if %stories.Count = 0, then !NewStory, else !ShowStories

NewStory
- Ask, "How old is the reader?", write to %age%
- Ask, "Give a description of a character/story/location/etc. 
    Here is something to help you:\n\n

    \t- Make sure to relate to you
    \t- Where does the story happen, Reykjavik(Iceland), Space, Down below earth?
    \t- You have a favorite animal, color, toy, car?
    \t- Special quirks or personality features?
    \t- Could the story be happening at work, at home, on vacation?\n\n

    \t===== Example =====\n\n
    
    \tHazel is a tiny, adventurous squirrel with a fluffy chestnut-and-cream coat. Known for her bright eyes and boundless curiosity, she roams the parks, eager to help friends and discover new wonders. Her city is Reykjavik, Iceland. Hazel loves the city center. Winters are cold, which is nice and summers are not to hot.\n\n
    
    \t===== Example =====\n\n
    
    Now write your own description:
    
    ", write to %character%
- Ask, "In what language should the story be in?", write to %language%
- Write out '\n\n========================\nThank you, we are analyzing and setting up the first chapter. This will take few seconds."
- read llm/system_categories.txt, write to %system%, load variables
- [llm] system: %system%
        user: "
            1. %age%
            2. %character%
            3. %language%"
        model: 'gpt-4-1106-preview'
        scheme: {title:string, age:number, timeInMinutes:number, summary:string, language:string, category:string, tags:string[]}
        write to %response%
- insert into stories, %response.title%, %response.summary%, %response.age%, %character% 
            %response.language%, %response.timeInMinutes%, 
            %response.category%, %response.tags.Join(";")%
    write to %storyId%
- read llm/system_first.txt into %system%, load variables
- call !CreateStory system=%system%

ShowStories
- select * from stories order by last_used desc, write to %stories%
- write out '================\n\nWelcome to Book

    0. Create new story' (keep tabs)
- foreach %stories%, call !ShowStoryItem
- Ask, "\n\nType in a number to continue?", write %number%
- if %number% == 0, then call !NewStory, else call !LoadStory

LoadStory
- get from dictionary, %stories_dict%, key %number%, write to %storyId%
- call !ShowStory %storyId%

ShowStoryItem
- write out '\t%position%. %item.title% - %item.last_used%'
- add to dictionary, 'stories_dict', key: %position%, value: %item.id%

ShowStory
- write out 'Loading story...'
- select * from stories where id=%storyId%, one row, write to %story%
- if %storyLineId% is null
    - select * from story_lines where storyId=%storyId% order by id desc, top 1, write to %lastChapter%
- if %storyLineId% is not null
    - select * from story_lines where id=%storyLineId%, top 1, write to %lastChapter%
    - set %storyLineId%  = null
- write out '\n\n============== %story.title% ==============\n\n' 
- write out %lastChapter.chapter%
- write out '\n\n ============== %story.title% ==============\n\n'
- select * from story_lines where storyId=%storyId% order by id desc , write to %chapters%
- set var %chapterList% = ""
- foreach %chapters% call !CreateChapterList
- Ask, "What would you like to do next?
    1. Create & read next chapter 
    2. See list of stories
    Chapters
        %chapterList%    
    ", write to %action%(int) - keep spaces
- if %action% == 1 then call !CreateChapter
- if %action% == 2, call !ShowStories
- if %action% > 2, call !ShowChapter

ShowChapter
- get dictionary %chapterDict%, key: %action%, write to %storyLineId%
- call !ShowStory storyLineId=%storyLineId%

CreateChapterList
- [code] %position%+2, write to %listNr%, and %listCount%-%position%+1, write to %chapterNr%
- append to string %chapterList%: \t%listNr%. Chapter %chapterNr%
- add to dictionary, %chapterDict%, key: %listNr%, value: %item.id%

CreateChapter
- select count(id, 1) as chapterCount from story_lines where storyId=%storyId%, write to %chapterCount%
- select shortSummary from story_lines where %storyId% order by id, write to %chapters%
- read file llm/system_chapter.txt, write to %systemChapter%, load variables
- call !CreateStory system=%systemChapter%, storyId=%storyId%

CreateStory
- write out 'Creating chapter for your story. Give me few minutes...\n========================\n\n'
- [llm] system: %system%
        scheme: {chapter:string, shortSummary:string}
        model: 'gpt-4-1106-preview'
        tempature: 1
        top p: 1
        write to %chapterInfo%
- insert into story_lines, values %storyId% %chapterInfo.chapter%, %chapterInfo.shortSummary%
- update stories set last_used=%Now% where %storyId%
- send private message to %Setting.MyMessageAddr%
    content: %chapterInfo.chapter%
- call !ShowStory %storyId%

ProcessMessage
- 
{
  "Action": {
    "FunctionName": "Get",
    "Parameters": [
      {
        "Type": "String",
        "Name": "url",
        "Value": "%url%"
      },
      {
        "Type": "Object",
        "Name": "data",
        "Value": null
      },
      {
        "Type": "Boolean",
        "Name": "doNotSignRequest",
        "Value": false
      },
      {
        "Type": "Dictionary`2<String, Object>",
        "Name": "headers",
        "Value": null
      },
      {
        "Type": "String",
        "Name": "encoding",
        "Value": "utf-8"
      },
      {
        "Type": "String",
        "Name": "contentType",
        "Value": "application/json"
      },
      {
        "Type": "Int32",
        "Name": "timeoutInSeconds",
        "Value": 30
      }
    ],
    "ReturnValues": [
      {
        "Type": "Object",
        "VariableName": "docs"
      }
    ]
  },
  "Text": "get %url%, write to %docs%",
  "Reload": false,
  "LlmRequest": {
    "temperature": 0.0,
    "top_p": 0.0,
    "frequencyPenalty": 0.0,
    "presencePenalty": 0.0,
    "maxLength": 4000,
    "llmResponseType": "json",
    "scheme": "{\n\t\"FunctionName\": string,\n\t\"Parameters\": [{\n\t\"Type\": string,\n\t\"Name\": string,\n\t\"Value\"?: object\n}],\n\t\"ReturnValues\"?: [{\n\t\"Type\": string,\n\t\"VariableName\": string\n}] = null\n}",
    "model": "gpt-4o-2024-08-06",
    "promptMessage": [
      {
        "role": "system",
        "content": [
          {
            "type": "text",
            "text": "Your job is: \r\n1. Parse user intent\r\n2. Map the intent to one of C# function provided to you\r\n3. Return a valid JSON\r\n\r\nVariable is defined with starting and ending %, e.g. %filePath%. \r\n%Variable% MUST be wrapped in quotes(\") in json response, e.g. { \"name\":\"%name%\" }\r\nVariables should not be changed, they can include dot(.) and parentheses()\r\nKeep \\n, \\r, \\t that are submitted to you for string variables\r\nParameter.Value that is type String MUST be without escaping quotes. See == QuoteExample ==\r\n\r\n== QuoteExample ==\r\nget url \"http://example.org\" => Value: \"http://example.org\"\r\nwrite out 'Hello world' => Value: \"Hello world\"\r\n== QuoteExample ==\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")% \r\n- settingName would be the api key, config key, \r\n- defaultValue for settings is the usual value given, make it \"\" if no value can be default\r\n- Explain is an explanation about the setting that novice user can understand.\r\n\r\n\r\n\r\nJSON scheme information\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nParameters: List of parameters that are needed according to the user intent.\r\n- Type: the object type in c#\r\n- Name: name of the variable\r\n- Value: \"%variable%\" or hardcode string that should be used\r\nReturnValue rules\r\n- Only if the function returns a value AND if user defines %variable% to write into, e.g. ' write into %data%' or 'into %result%', or simliar intent to write return value into variable\r\n- If no %variable% is defined then set as null."
          },
          {
            "type": "text",
            "text": "You MUST respond in JSON, scheme:\r\n {\n\t\"FunctionName\": string,\n\t\"Parameters\": [{\n\t\"Type\": string,\n\t\"Name\": string,\n\t\"Value\"?: object\n}],\n\t\"ReturnValues\"?: [{\n\t\"Type\": string,\n\t\"VariableName\": string\n}] = null\n}"
          }
        ]
      },
      {
        "role": "assistant",
        "content": [
          {
            "type": "text",
            "text": "## functions available starts ##\r\nDownloadFile(String url, String pathToSaveTo, Boolean? overwriteFile = False, Dictionary`2<String, Object>? headers, Boolean? createPathToSaveTo = True)  : void \nPost(String url, Object? data, Boolean? doNotSignRequest = False, Dictionary`2<String, Object>? headers, String? encoding = \"utf-8\", String? contentType = \"application/json\", Int32? timeoutInSeconds = 30)  : Object \nPatch(String url, Object? data, Boolean? doNotSignRequest = False, Dictionary`2<String, Object>? headers, String? encoding = \"utf-8\", String? contentType = \"application/json\", Int32? timeoutInSeconds = 30)  : Object \nGet(String url, Object? data, Boolean? doNotSignRequest = False, Dictionary`2<String, Object>? headers, String? encoding = \"utf-8\", String? contentType = \"application/json\", Int32? timeoutInSeconds = 30)  : Object \nOption(String url, Object? data, Boolean? doNotSignRequest = False, Dictionary`2<String, Object>? headers, String? encoding = \"utf-8\", String? contentType = \"application/json\", Int32? timeoutInSeconds = 30)  : Object \nHead(String url, Object? data, Boolean? doNotSignRequest = False, Dictionary`2<String, Object>? headers, String? encoding = \"utf-8\", String? contentType = \"application/json\", Int32? timeoutInSeconds = 30)  : Object \nPut(String url, Object? data, Boolean? doNotSignRequest = False, Dictionary`2<String, Object>? headers, String? encoding = \"utf-8\", String? contentType = \"application/json\", Int32? timeoutInSeconds = 30)  : Object \nDelete(String url, Object? data, Boolean? doNotSignRequest = False, Dictionary`2<String, Object>? headers, String? encoding = \"utf-8\", String? contentType = \"application/json\", Int32? timeoutInSeconds = 30)  : Object \nPostMultipartFormData(String url, Object data, String? httpMethod = \"POST\", Boolean? doNotSignRequest = False, Dictionary`2<String, Object>? headers, String? encoding = \"utf-8\", Int32? timeoutInSeconds = 30)  : Object  // Post a FileStream to url. When a variable is defined with @ sign, it defines that it should be a FileStream. data may contain something like file=@%fileName%;type=%fileType%, then keep as one value for the file parameter. The function will parse the file and type. \nRequest(String url, String method, Object? data, Boolean? doNotSignRequest = False, Dictionary`2<String, Object>? headers, String? encoding = \"utf-8\", String? contentType = \"application/json\", Int32? timeoutInSeconds = 30)  : Object\r\n## functions available ends ##\r\n## defined variables ##\r\nurl (type:String), docs (type:object), \r\n## defined variables ##"
          }
        ]
      },
      {
        "role": "user",
        "content": [
          {
            "type": "text",
            "text": "get %url%, write to %docs%"
          }
        ]
      }
    ],
    "type": "PLang.Modules.HttpModule.Builder",
    "caching": true,
    "RawResponse": "```json\n{\n\t\"FunctionName\": \"Get\",\n\t\"Parameters\": [{\n\t\t\"Type\": \"String\",\n\t\t\"Name\": \"url\",\n\t\t\"Value\": \"%url%\"\n\t}, {\n\t\t\"Type\": \"Object\",\n\t\t\"Name\": \"data\",\n\t\t\"Value\": null\n\t}, {\n\t\t\"Type\": \"Boolean\",\n\t\t\"Name\": \"doNotSignRequest\",\n\t\t\"Value\": false\n\t}, {\n\t\t\"Type\": \"Dictionary`2<String, Object>\",\n\t\t\"Name\": \"headers\",\n\t\t\"Value\": null\n\t}, {\n\t\t\"Type\": \"String\",\n\t\t\"Name\": \"encoding\",\n\t\t\"Value\": \"utf-8\"\n\t}, {\n\t\t\"Type\": \"String\",\n\t\t\"Name\": \"contentType\",\n\t\t\"Value\": \"application/json\"\n\t}, {\n\t\t\"Type\": \"Int32\",\n\t\t\"Name\": \"timeoutInSeconds\",\n\t\t\"Value\": 30\n\t}],\n\t\"ReturnValues\": [{\n\t\t\"Type\": \"Object\",\n\t\t\"VariableName\": \"docs\"\n\t}]\n}\n```"
  },
  "RunOnBuild": false
}